#create a new data set that contains gene expression data for the genes in the GO term GO:0006955.

load("/Alldata.Rdata")
library("glmmML")
library("MASS")
library("nlme")
library("lme4")
Goterms<-Alldata$originaldata[,128:130] 
mc<-dim(Goterms)[1]
GOTermlist<-NULL 
for (j in 1:mc)
{
  list<-NULL 
  for (k in 1:3)
  {
    GOTerm22283<-as.character(Goterms[j,k]) 
    getGoTerms<-unlist(strsplit(GOTerm22283,"///")) 
    repj<-rep(j,length(getGoTerms)) 
    newlist<-cbind(repj,getGoTerms) 
    list<-rbind(list,newlist)
  } 
  GOTermlist<-rbind(GOTermlist,list)
}
GO0006955<-which(GOTermlist[,2]=="GO:0006955") 
rownums<-as.numeric(GOTermlist[GO0006955,1]) 
subsetGenes<-Alldata$originaldata[rownums,c(3:110)]

# Q2 
#define three covariates beverage effects, time effects and individual effects respectively.
samIDs<-names(subsetGenes)
Beverages<-(samIDs%in%Alldata$trt1)*1+(samIDs%in%Alldata$trt2)*2+(samIDs%in%Alldata$trt3)*3+(samIDs%in%Alldata$trt4)*4
Subject<-(samIDs%in%Alldata$ind1)*1+(samIDs%in%Alldata$ind2)*2+(samIDs%in%Alldata$ind3)*3+(samIDs%in% Alldata$ind4)*4+(samIDs%in%Alldata$ind5)*5+(samIDs%in%Alldata$ind6)*6
hours<-(samIDs%in%Alldata$time_h0)*0+(samIDs%in%Alldata$time_h1)*1+(samIDs%in%Alldata$time_h2)*2+( samIDs%in%Alldata$time_h4)*4+(samIDs%in%Alldata$time_h12)*12

# Q3
#linear mixed model & hypotheses test（test-statistics and p-values）
BeverFac<-as.factor(Beverages) 
hourFac<-as.factor(hours) 
resp<-as.numeric(subsetGenes[1,]) 
lmmd2<-lmer(resp~BeverFac+(1|Subject)+(1|hours)) 
summary(lmmd2)

#between water and alcohol group
Zstat<-summary(lmmd2)$coefficients[4,3] 
pval1<-2*(1-pnorm(abs(Zstat)))
Zstat
pval1

#between water and red wine group
n<-108
std34<-sqrt((summary(lmmd2)$coefficients[3,2])^2/n+(summary(lmmd2)$coefficients[4,2]^2/n))
tstat<-(summary(lmmd2)$coefficients[3,1]-summary(lmmd2)$coefficients[4,1])/std34
pval2<-2*(1-pnorm(abs(tstat)))
tstat
pval2

# Q4
#find the gene that significant for the above two hypotheses testing and have the smallest p-value
numgenes<-dim(subsetGenes)[1]
pvalset<-rep(0,numgenes)
pvalset2<-rep(0,numgenes)
for (i in 1:numgenes) 
  {
  resp<-as.numeric(subsetGenes[i,]) 
  lmmd2<-lmer(resp~BeverFac+(1|Subject)+(1|hours)) 
  Zstat<-summary(lmmd2)$coefficients[4,3]
  pvalset[i]<-2*(1-pnorm(abs(Zstat))) 
  betadiff<-summary(lmmd2)$coefficients[3,1]-summary(lmmd2)$coefficients[4,1] 
  varbetadiff<-t(c(0,0,1,-1))%*%(summary(lmmd2)$vcov)%*%c(0,0,1,-1) 
  Zstat2<-as.numeric(betadiff/sqrt(varbetadiff)) 
  pvalset2[i]<-2*(1-pnorm(abs(Zstat2)))
}
hist(pvalset, main="p-value for testing hypothesis on alcohol versus water", xlab="p-values")
hist(pvalset2, main="p-value for testing hypothesis on red wine versus water", xlab="p-values")

# Q5
#plot the gene expression versus time
smallest<-which.min(pvalset) 
newresp<-as.numeric(subsetGenes[smallest,]) 
plot(hours,newresp,type="n",xlab="Hours", ylab="gene expression") 
for (sub in 1:6)
  for (bever in 1:4) 
    {
    points(hours[(Subject==sub)&(Beverages==bever)],newresp[(Subject==sub)&(Beverages==bever)],col=bever,pch=sub) 
    lines(hours[(Subject==sub)&(Beverages==bever)],newresp[(Subject==sub)&(Beverages==bever)],col=bever)
  }

# Q6
# a
#fit the linear mixed model
hours2<-hours^2 
hours3<-hours^3 
combfacs<-Subject*10+Beverages
glscsh<-gls(resp~BeverFac+hours+hours2+hours3,correlation=corCompSymm(form=~1|combfacs),weights=varIdent(form=~1|combfacs),method="REML") 
glsarh1<-gls(resp~BeverFac+hours+hours2+hours3,correlation=corAR1(form=~1|combfacs),weights=varIdent(form=~1|combfacs),method="REML") 

#compare glscsh(heterogeneous compound symmetry) and glsarh1(heterogeneous AR(1))
AIC(glscsh)
AIC(glsarh1)

BIC(glscsh)
BIC(glsarh1)

#choose glscsh(heterogeneous compound symmetry)
summary(glscsh)

#compute an asymptotic Wald type test statistic
Sigbeta<-vcov(glscsh)[5:7,5:7] 
Tn<-t(summary(glscsh)$coefficients[5:7])%*%solve(Sigbeta)%*%summary(glscsh)$coefficients[5:7]
pvalTn<-2*(1-pnorm(abs(Tn)))

# b
#fit the model with the heterogeneous compound symmetric covariance structures
glscshM2<-gls(resp~BeverFac+BeverFac*hours+BeverFac*hours2+BeverFac*hours3,correlation=corCompSymm(form=~1|combfacs),weights=varIdent(form=~1|combfacs),method="REML") 
summary(glscshM2)

#check the time effect
Sigbeta1<-vcov(glscshM2)[5:16,5:16]
Tn1<-t(summary(glscshM2)$coefficients[5:16])%*%solve(Sigbeta1)%*%summary(glscshM2)$coefficients[5:16]
pvalTn1<-2*(1-pnorm(abs(Tn1)))
Tn1

#check for the beverage effect
Sigbeta0<-vcov(glscshM2)[2:4,2:4] 
Tn2<-t(summary(glscshM2)$coefficients[2:4])%*%solve(Sigbeta0)%*%summary(glscshM2)$coefficients[2:4]
pvalTn2<-2*(1-pnorm(abs(Tn2)))
Tn2

# Q7
#over-expression or under-expression due to beverage effects
#define the binary response
Combdata<-cbind(newresp,hours,Subject,Beverages,combfacs) 
unicombfacs<-Combdata[Combdata[,2]==0,5] 
newcombdata<-NULL
for (i in 1:length(unicombfacs))
{
  subcomb<-Combdata[Combdata[,5]==unicombfacs[i],]
  Yvec<-subcomb[,1]
  Hvec<-subcomb[,2]
  Zvec<-((Yvec[Hvec!=0]-Yvec[Hvec==0])>0)+0 
  newcombdata<-rbind(newcombdata,cbind(Zvec,subcomb[Hvec!=0,c(2:5)]))
}
newcombdata1<-list(Zvec=newcombdata[,1],hours=newcombdata[,2],Subject=newcombdata[,3],Beverages=newcombdata[,4],combfacs=newcombdata[,5]) 
newcombdata1$Beverages<-as.factor(newcombdata1$Beverages) 
newcombdata1$hours<-as.factor(newcombdata1$hours)

#fit the generalized linear mixed model using likelihood with Laplace approximation
glmRandomIntcept1<-glmer(newcombdata1$Zvec~newcombdata1$Beverages+newcombdata1$hours+(1|newcombdata1$combfacs),family=binomial)
summary(glmRandomIntcept1)
glmRandomIntcept2<-glmmML(newcombdata1$Zvec~newcombdata1$Beverages+newcombdata1$hours,family=binomial,cluster=newcombdata1$combfacs)
summary(glmRandomIntcept2)

#fit the generalized linear mixed model using the adaptive Gauss-Hermite quadrature approximation
glmRandomIntcept4<-glmer(newcombdata1$Zvec~newcombdata1$Beverages+newcombdata1$hours+(1|newcombdata1$co mbfacs),nAGQ=8,family=binomial)
summary(glmRandomIntcept4)

#fit the generalized linear mixed model using the penalized quasi-likelihood method
newcombdata2<-data.frame(newcombdata1)
glmRandomIntcept3<-glmmPQL(Zvec~Beverages+hours,random=~1|combfacs,family=binomial,data=newcombdata2) 
summary(glmRandomIntcept3)
